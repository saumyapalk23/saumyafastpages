{
  
    
        "post0": {
            "title": "Code.Org Vocab",
            "content": "class - a programmer-defined blueprint from which objects are created inheritance hierarchy - where a class serves as a superclass for more than one subclass | . | constructor - a block of code that has the same name as the class . and tells the computer how to create a new object | . | debugging - identifying + fixing problems in an algorithm or program . | instantiate - to call the constructor to create an object . | object - an instance of a class . attribute - a characteristic of an object | behavior - an action that an object can perform | object-oriented programming - an approach to creating and using models of physical or imagined objects | state - the attributes of an object that are represented by its instance variables | . | methods . method signature - consists of a name and parameter list | method decomp. - the process of breaking a problem down into smaller parts to write methods for each part | . | constructor signature - the first line of the constructor which includes the public keyword, the constructor name, and the values to specify when an object is created . | inheritance - an object-oriented programming principle where a subclass inherits the attributes and behaviors of a superclass | subclass - a class that extends a superclass and inherits its attributes and behaviors | superclass - a class that can be extended to create subclasses | edge case - a bug that occurs at the highest or lowest end of a range of possible values or in extreme situations | redundant code - code that is unnecessary; reiterates the same point | .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/jupyter/2022/09/06/vocabweek2.html",
            "relUrl": "/jupyter/2022/09/06/vocabweek2.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Classic Snake Game",
            "content": "| Menu | Calculator | Snake Game | . Snake score: 0 . . Welcome to Snake, press space to begin . new game settings Game Over, press space to try again . new game settings Settings Screen, press space to go back to playing . new game Speed: Slow Normal Fast . Wall: On Off .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/frontend/snake",
            "relUrl": "/frontend/snake",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Calculator Starters",
            "content": "| Menu | Calculator | Snake Game | . 0 1 2 3 + 4 5 6 - 7 8 9 * A/C 0 . =",
            "url": "https://saumyapalk23.github.io/saumyafastpages/frontend/calculator",
            "relUrl": "/frontend/calculator",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Documentation/Analysis",
            "content": "Class . basic building block | must be given keyword &quot;class&quot; in java (at the top) followed by class name | followed by methods and variables | . | class declaration includes: Modifiers: A class can be public or has default access. | class keyword: The class keyword is used to create a class. | Class name: The name must begin with an initial letter (capitalized by convention). | Superclass (if any): The name of the class&#39;s parent (superclass), if any, preceded by the keyword extends. A class can only extend (subclass) one parent. | Interfaces (if any): A comma-separated list of interfaces implemented by the class, if any, preceded by the keyword implements. A class can implement more than one interface. | Body: The class body surrounded by braces, { }. | . | . //to create a class public class Main { int x = 5; } . //multiple classes class Second { public static void main(String[] args) { Main myObj = new Main(); System.out.println(myObj.x); } } . Instance of a Object . non-static variables defined outside any method, constructor, block, etc. | has a separate copy or instance | belongs to a class | instance variables are in the class but outside methods | have different defaults that are later specified | can only be used when an object is made | is destroyed with the object it&#39;s assoc. with | not necessary to be initialized | accessible in the same class that declares them | cannot be declared static, abstract, etc. only final and transient | can be any fof the four java modifiers: private, public, protected, and default | . | include: boolean, byte, short, int, double, float, long, Object, char | . //to create an object public class Main { int x = 5; public static void main(String[] args) { Main myObj = new Main(); System.out.println(myObj.x); } } . //multiple objects public class Main { int x = 5; public static void main(String[] args) { Main myObj1 = new Main(); // Object 1 Main myObj2 = new Main(); // Object 2 System.out.println(myObj1.x); System.out.println(myObj2.x); } } . Methods . a block of code only running when called | used to pass data, (parameters) | perform actions, known also as functions | reuse code and define the code once to use repetitively | in the example below: myMethod() = name of method | static --&gt; means that the method belongs to the Main class and not an object of the Main class. | void --&gt; this method doesn&#39;t return a value | . | to call a method, write the method&#39;s name w/ 2 parentheses and a semicolon | . //basic method syntax public class Main { static void myMethod() { // code to be executed } } . //calling a method public class Main { static void myMethod() { System.out.println(&quot;I just got hired!&quot;); } public static void main(String[] args) { myMethod(); } } // Outputs &quot;I just got hired!&quot; . Object Mutation . faults inserted into a program that distinguish the mutant from the original program | certain objects are mutable vs. immutable | strings are immutable; will always rep. the same string but StringBuilder is mutable; it has methods to delete, insert, or replace characters | . | mutable types seem more powerful than immutable ones mutable is safer from bugs than immutable | easier to understand than immutable | . | . Console vs. GUI vs. Code.org . console: console class in java provides methods to access character-based console device | GUI = graphical user interface; graphical representation where users interact w/ software/devices through clickable icons | CLI: console/text/character based representation where user types commands into a terminal to operate or navigate the software/devices | Code.org: thus is CLI; typing of commands, character-based | .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/jupyter/2022/09/05/documentanalysis.html",
            "relUrl": "/jupyter/2022/09/05/documentanalysis.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Flashcards",
            "content": "public class QuestionBank { //array of question private String textQuestion[] = { &quot;What year was the DOI signed?&quot;, &quot;What saved the capitol during the War of 1812?&quot;, &quot;Who was the 2nd President of the US?&quot;, &quot;Who was mainly involved in the corrupt bargain?&quot; }; // multiple choice for each question private String multipleChoice[][]= { {&quot;1776&quot;,&quot;1729&quot;,&quot;1830&quot;}, {&quot;Tornado&quot;,&quot;Earthquake&quot;,&quot;Thunderstorm&quot;}, {&quot;John Adams&quot;,&quot;Thomas Jefferson&quot;,&quot;Benjamin Harrison&quot;}, {&quot;Abraham Lincoln&quot;,&quot;John Quincy Adams&quot;,&quot;Ulysses S. Grant&quot;}, }; // arraqy of correct question answer private String mCorrectAnswer[] = {&quot;1776&quot;, &quot;Thunderstorm&quot;, &quot;John Adams&quot;, &quot;John Quincy Adams&quot;}; //method for get number of question public int getLength(){ return textQuestion.length; } public String getQuestion(int a){ String question = textQuestion[a]; return question; } //return single multiple choice item int list 1 2 3 4 as an argument public String getChoice(int index, int num){ String choice = multipleChoice[index][num-1]; return choice; } public String getCorrectAnswer(int a){ String answer = mCorrectAnswer[a]; return answer; } } . / imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // HashMap&lt;Integer, String&gt; hMapNumbers = new HashMap&lt;Integer, String&gt;(); // hMapNumbers.put(1, &quot;One&quot;); // hMapNumbers.put(2, &quot;Two&quot;); // hMapNumbers.put(3, &quot;Three&quot;); public final String[][] QUESTIONS = { // 2D Array of ANSI Terminal Colors {&quot;What year was the DOI signed?&quot;, &quot;1776&quot;}, {&quot;What saved the capitol during the War of 1812?&quot;, &quot;Thunderstorm&quot;}, {&quot;Who was the 2nd President of the US?&quot;, &quot;John Adams&quot;}, {&quot;Who was mainly involved in the corrupt bargain?&quot;, &quot;John Qunicy Adams&quot;}, }; // 2D column location for data public final int TITLE = 0; public final int VALUE = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;4 - History Quiz&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;#&quot;); } break; case 4: for(int i = 0; i &lt; QUESTIONS.length; i++) // loop through COLORS array System.out.print(QUESTIONS[i][TITLE]); for(int i = 0; i &lt; QUESTIONS.length; i++) // loop through COLORS array System.out.print(QUESTIONS[i][VALUE]); // hMapNumbers.entrySet().forEach( entry -&gt; { // System.out.println( entry.getKey() + &quot; =&gt; &quot; + entry.getValue() ); // }); break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); white_check_mark eyes raised_hands . - Choose from these choices - 1 - Say Hello 2 - Output colors 3 - Loading in color 4 - History Quiz 0 - Quit - 4: What year was the DOI signed?What saved the capitol during the War of 1812?Who was the 2nd President of the US?Who was mainly involved in the corrupt bargain?1776ThunderstormJohn AdamsJohn Qunicy Adams .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/jupyter/2022/09/04/flashcards.html",
            "relUrl": "/jupyter/2022/09/04/flashcards.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Console Based Menu",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;#&quot;); } break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Choose from these choices - 1 - Say Hello 2 - Output colors 3 - Loading in color 0 - Quit - 0: Goodbye, World! . import java.awt.*; import java.awt.event.*; import javax.swing.*; import java.util.Timer; import java.util.TimerTask; // Graphical-User-Interface for Desktop in Java using Java Swing. public class MenuJFrame extends JFrame implements ActionListener { private JFrame frame; private JMenuBar menubar; private JMenu menu; private JLabel message = new JLabel(&quot;Click on Menu to select an action.&quot;); public final String[] MENUS = { // 1D Array of Menu Choices &quot;Hello&quot;, &quot;Colors&quot;, &quot;Loading bar&quot;, }; // Statics to assist with timer and messaging, single copy (no instance) private static int delay = 20; private static int step = 1; private static String hashes = &quot;&quot;; // Constructor enables the Frame instance, the object &quot;this.frame&quot; public MenuJFrame(String title) { // Initializing Key Objects frame = new JFrame(title); menubar = new JMenuBar(); menu = new JMenu(&quot;Menu&quot;); // Initializing Menu objects and adding actions for (String mx : MENUS) { JMenuItem m = new JMenuItem(mx); m.addActionListener(this); menu.add(m); } // Adding / Connecting Objects menubar.add(menu); frame.setJMenuBar(menubar); frame.add(message); // Sets JFrame close operation to Class variable JFrame.EXIT_ON_CLOSE frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // set the size of window based on objects frame.setSize(300,200); // makes the frame object visible according to properties previously set frame.setVisible(true); // flow of control shifts to frame object } // event from user selecting a menu option public void actionPerformed(ActionEvent e) { // local variable to ActinEvent String selection = e.getActionCommand(); // menu selection String msg; // local variable to create response from action final String[] COLORS = {&quot;Red&quot;, &quot;Green&quot;, &quot;Blue&quot;}; // add more colors here final String start_msg = &quot;&lt;html&gt;&quot;; // html building final String end_msg = &quot;&lt;/html&gt;&quot;; final String hash = &quot;#&quot;; // run code based on the menuItem that was selected if ( selection.equals(MENUS[0]) ) { // Hello Action msg = &quot;Hello, World&quot;; message.setText(msg); } else if ( selection.equals(MENUS[1]) ) { // Color Action msg = start_msg + &quot;&lt;p&gt;&quot; + selection + &quot;&lt;/p&gt;&quot;; for (String color : COLORS) { msg += &quot;&lt;font color=&quot; + color + &quot;&gt;&quot; + color + &quot; &lt;/font&gt;&quot;; } msg += end_msg; message.setText(msg); } else { // Loading Bar Action String loading = &quot;&lt;p&gt;Loading&lt;/p&gt;&quot;; // Code to run on a Timer Timer timer = new Timer(); TimerTask task = new TimerTask() { public void run() { // Method for TimerTask // Static and Local variables used to manage message building int random = (int) (Math.random() * COLORS.length); // random logic MenuJFrame.hashes += &quot;&lt;font color=&quot; + COLORS[random] + &quot;&gt;&quot; + hash + &quot;&lt;/font&gt;&quot;; String msg = start_msg + loading + hashes + end_msg; message.setText(msg); // Shutdown timer and reset data if(MenuJFrame.step++ &gt; MenuJFrame.delay) { MenuJFrame.step = 1; MenuJFrame.hashes=&quot;&quot;; timer.cancel(); } }; }; // Schedule task and interval timer.schedule(task, 200, 200); message.setText(start_msg + loading + hash + end_msg); // prime/initial display } } // Driver turn over control the GUI public static void main(String[] args) { // Activates an instance of MenuJFrame class, which makes a JFrame object new MenuJFrame(&quot;Menu&quot;); } } MenuJFrame.main(null); . java.awt.HeadlessException: No X11 DISPLAY variable was set, but this program performed an operation which requires it. at java.desktop/java.awt.GraphicsEnvironment.checkHeadless(GraphicsEnvironment.java:208) at java.desktop/java.awt.Window.&lt;init&gt;(Window.java:548) at java.desktop/java.awt.Frame.&lt;init&gt;(Frame.java:423) at java.desktop/java.awt.Frame.&lt;init&gt;(Frame.java:388) at java.desktop/javax.swing.JFrame.&lt;init&gt;(JFrame.java:180) at MenuJFrame.&lt;init&gt;(#21:1) at MenuJFrame.main(#21:1) at .(#22:1) .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/jupyter/2022/09/02/console.html",
            "relUrl": "/jupyter/2022/09/02/console.html",
            "date": " • Sep 2, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "GPA Calculator",
            "content": "public class GPACalc { // instantiation of obj public GradeCalculator() { this.grades = new gradelist&lt;&gt;(); this.enterGrades(); } private boolean isZero(double value){ double threshold = 0.001; return value &gt;= -threshold &amp;&amp; value &lt;= threshold; } // enterGrades input method using scanner private void enterGrades() { Scanner input; while (true) { input = new Scanner(System.in); System.out.print(&quot;Enter a double, 0 to exit: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); if (isZero(sampleInputDouble)) break; // exit loop on isZero else this.grades.add(sampleInputDouble); // adding to object, ArrayList grades } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); } } // calculate for the average public double average() { double total = 0; // running total for (double num : this.grades) { // enhanced for loop total += num; // shortcut add and assign operator } return (total / this.grades.size()); // double math, ArrayList grades object maintains its size } // static main method, used as driver and tester public static void main(String[] args) { GradeCalculator grades = new GradeCalculator(); // calls constructor, creates object, which calls enterGrades System.out.println(&quot;Average: &quot; + String.format(&quot;%.2f&quot;, grades.average())); // format used to standardize to two decimal points } } // IJava activation GradeCalculator.main(null); white_check_mark eyes raised_hands .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/jupyter/2022/08/30/grdclc.html",
            "relUrl": "/jupyter/2022/08/30/grdclc.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Extra Credit From Alumni Meeting (8/29)",
            "content": "Life In College/Insight . functions/programs/algorithms are such an experience to work with (visible with Colin’s experience in 3d modeling and Mabel’s experience with visualizing data in their respective mechanical and aerospace majors) | Working with API’s, JS, HTML, python, etc | CS helps a lot (internships, and basics) | Logical thinking is extremely important | Data visualizations include: Sorting algorithms, graph theory, etc. for visualizing | Data manipulation visible in mechanical engineering | Cam or computation-aided manufacturing | Simulations for materials that are done by hand and have to be converted into actual functions -- after further setup of resources, goal is to run those computations | | . | As for cognitive science, or the graphical design aspect w/ web development: design, ux ui (user interface/interaction) are very important | CSP gave a slight technical background (with CSS, HTML, etc.) | . | APCSA – Teaches you how to apply skills to real-world problems | Nitya’s example: Covid-19 Database Project when the pandemic hit during her year | . | . Advice &amp; Main Takeaways . Keep motivating yourself. Github is difficult to use sometimes and errors are consistent. There is ALWAYS a solution to a problem and an answer to a question. Use Google, use your teachers. Very important to utilize your resources. | | Clashing egos are difficult to encounter. CS Majors are often people to brag or talk about their accomplishments in excessive detail. It is important to not let that go to your head, and to instead take it as a seed of motivation to try harder. . | Focus on your path, and follow your own curve. The theory behind computer science is very different in college and the way that APCSA/P are structured is much more straightforward than it will be in college; it is thus important to use what you learned in highschool and apply to college. | | It is important to learn how to flowchart things and learn how to logically move through problems. | Fighting the temptation to BS -- hard work will turn out in the end. It is important to stop cutting corners and put everything in a box as a necessity to get points vs. actually learning the context and expanding thinking. | | Getting started in new areas is difficult. It’s difficult to get rid of structure that people are put in when they are organized and fixed. But CS Is many different ideas put together, and there are many PBL scenarios in college CS classes. One has to adapt to fit them al. . | In Colin’s case, there is one hands-on project freshman year and one senior year. All skills require PBL skills such as scrum methodology and collaboration. While the classes are more theory-based, many principles are continued. It is important to study in groups, work w/ others when you first arrive to college and as much as possible when you can to build relationships and to help understand better. . | Like everywhere, it is difficult to collaborate in college too, because it may be hard to understand content and your groups may not contribute enough. It is imperative to figure out efficiency. . | Menial tasks can be applied in many majors: copying/pasting, converting data types, word to spreadsheet, etc. | Take input convert into other input (write a script) | . | Coding is really everywhere | . | It’s important to take the wheel or offer: “I can code this part” | . | This doesn’t JUST apply to coding; problem-solving, cognitive and logical thinking | . | Math courses also help w cs | Math libraries in python | . | Jupyter notebooks; used in college a lot . | Cognitive Science | Uses stats, psychology courses, + programming | . | Inevitably you’re going to have to do programming | . | think about how you stack up against the other competitors; What makes YOU unique? | programming is useful in a multitude of different fields | personal projects can help you learn more and challenge yourself | . Connections . Use resume for internships | Internships at Northrop Grumman | Ask professors if there are spaces for you | Anthony – works @ Codeninjas | Opportunities; Cybersecurity intern: technical revisions, diagrams, etc. at Northrop Grumman | Triton AI, Club @ ucsd, which work on autonomous cars | Triton clubs that do ocean surveillance for the navy (Northrop Grumman) | A resume done by early Sep to get an internship by summer (generally open up in the fall) | Open a linkedin | Ask local/smaller company for highschool interns ‘ | .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/markdown/2022/08/29/extracred.html",
            "relUrl": "/markdown/2022/08/29/extracred.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Primitives Notebook",
            "content": "Fastpages Primitives Notes/Learning Captured . Primitives Notes . set of data types | in CSA exam; consist of int, boolean, double int; integer | boolean; true/false | double; stores floating pt numbers | . | includes variables | . public class DefinePrimitives { public static void main(String[] args) { int anInt = 100; double aDouble = 89.9; boolean aBoolean = true; // not primitives but essential String aString = &quot;Hello, World!&quot;; // wrapper class shortcut assignment String aStringFormal = new String(&quot;Greetings, World!&quot;); System.out.println(&quot;anInt: &quot; + anInt); System.out.println(&quot;aDouble: &quot; + aDouble); System.out.println(&quot;aBoolean: &quot; + aBoolean); System.out.println(&quot;aString: &quot; + aString); System.out.println(&quot;aStringFormal: &quot; + aStringFormal); } } DefinePrimitives.main(null) . // java style to import library import java.util.Scanner; // class must alway have 1st letter as uppercase, CamelCase is Java Class convention public class ScanPrimitives { public static void main(String[] args) { Scanner input; // primitive int input = new Scanner(System.in); System.out.print(&quot;Enter an integer: &quot;); try { int sampleInputInt = input.nextInt(); System.out.println(sampleInputInt); } catch (Exception e) { // if not an integer System.out.println(&quot;Not an integer (form like 159), &quot; + e); } input.close(); // primitive double input = new Scanner(System.in); System.out.print(&quot;Enter a double: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); // primitive boolean input = new Scanner(System.in); System.out.print(&quot;Enter a boolean: &quot;); try { boolean sampleInputBoolean = input.nextBoolean(); System.out.println(sampleInputBoolean); } catch (Exception e) { // if not true or false System.out.println(&quot;Not an boolean (true or false), &quot; + e); } input.close(); // wrapper class String input = new Scanner(System.in); System.out.print(&quot;Enter a String: &quot;); try { String sampleInputString = input.nextLine(); System.out.println(sampleInputString); } catch (Exception e) { // this may never happen System.out.println(&quot;Not an String, &quot; + e); } input.close(); } } ScanPrimitives.main(null); . public class PrimitiveDivision { public static void main(String[] args) { int i1 = 7, i2 = 2; System.out.println(&quot;Integer Division&quot;); System.out.println(&quot; tint output with concatenation: &quot; + i1 + &quot;/&quot; + i2 + &quot; = &quot; + i1/i2); System.out.println(String.format(&quot; tint output with format: %d/%d = %d&quot;,i1, i2, i1/i2)); System.out.printf(&quot; tint output with printf: %d/%d = %d n&quot;,i1, i2, i1/i2); double d1 = 7, d2 = 2; System.out.println(&quot;Double Division&quot;); System.out.println(&quot; tdouble output with concatenation: &quot; + d1 + &quot;/&quot; + d2 + &quot; = &quot; + d1/d2); System.out.println(String.format(&quot; tdouble output with format: %.2f/%.2f = %.2f&quot;,d1, d2, d1/d2)); System.out.printf(&quot; tdouble output with printf: %.2f/%.2f = %.2f n&quot;,d1, d2, d1/d2); System.out.println(&quot;Casting and Remainders&quot;); System.out.printf(&quot; tint cast to double on division: %d/%d = %.2f n&quot;,i1, i2, i1/(double)i2); System.out.println(&quot; tint using modulo for remainder: &quot; + i1 + &quot;/&quot; + i2 + &quot; = &quot; + i1/i2 + &quot; remainder &quot; + i1%i2); } } PrimitiveDivision.main(null); . public class GradeCalculator { // introduction to Double wrapper class (object) ArrayList&lt;Double&gt; grades; // similar to Python list // constructor, initializes ArrayList and call enterGrades method public GradeCalculator() { this.grades = new ArrayList&lt;&gt;(); this.enterGrades(); } // double requires test for zero versus threshold, DO NOT compare to Zero private boolean isZero(double value){ double threshold = 0.001; return value &gt;= -threshold &amp;&amp; value &lt;= threshold; } // enterGrades input method using scanner private void enterGrades() { Scanner input; while (true) { input = new Scanner(System.in); System.out.print(&quot;Enter a double, 0 to exit: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); if (isZero(sampleInputDouble)) break; // exit loop on isZero else this.grades.add(sampleInputDouble); // adding to object, ArrayList grades } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); } } // average calculation public double average() { double total = 0; // running total for (double num : this.grades) { // enhanced for loop total += num; // shortcut add and assign operator } return (total / this.grades.size()); // double math, ArrayList grades object maintains its size } // static main method, used as driver and tester public static void main(String[] args) { GradeCalculator grades = new GradeCalculator(); // calls constructor, creates object, which calls enterGrades System.out.println(&quot;Average: &quot; + String.format(&quot;%.2f&quot;, grades.average())); // format used to standardize to two decimal points } } // IJava activation GradeCalculator.main(null); . Enter a double, 0 to exit: .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/jupyter/2022/08/28/primitives.html",
            "relUrl": "/jupyter/2022/08/28/primitives.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Blog Notes",
            "content": "bash kernel notes . bash allows users to interact with basic commands | . | run through terminal | . | executes linux commands | . | | . | . java (code.org) learnings . variables | in Java, variables are a mechanism to store values. There are different types of variables – the most commonly used variables are listed below: | . | A boolean is one of two values: true or false. _* * Example instantiation: boolean done = false; | . | An int stores whole numbers (no decimals). _* * Example instantiation: int x = 1; _* * A double stores decimals with up to 15 digits of precision. _* * Example instantiation: double y = -1.479582834; | . | A String stores text using double quotes “”. _* * Example instantiation: String name = “Sam”; | . | . the main method . main method; where program starts running | . | public: The method needs to be public for the JVM to identify it. | . | static: static in this context means that there will be only one type of this method and that it will be shared. | . | when we call the main method, it does not require a new instantiated object – it can be called without the creation of a new object. | . | void: There is nothing returned from the main method. | . | main: The general signature of the main method that is identified by the JVM to execute any program from start to finish. | . | String[] args: The main method’s argument (or input parameter) is an array of type String. This allows the method to accept command line arguments, which are stored as Strings in this variable. The name args can be changed. | . | . inheritance . superclass: the class that the new class inherits from is generally called the parent or super class | . | subclass: the class that inherits from the superclass | . | We use the extends keyword to explicitly state the superclass. | . | .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/markdown/2022/08/28/blogbash.html",
            "relUrl": "/markdown/2022/08/28/blogbash.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Bash Notebook",
            "content": "Project Directory Prerequisites . echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/csp # change vscode to different name to test git clone export project=$project_dir/sjavaproject # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/saumyapalk23/saumyafastpages.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /home/spalak06/csp exists. Directory /home/spalak06/csp/sjavaproject does not exists... cloning https://github.com/saumyapalk23/saumyafastpages.git fatal: destination path &#39;saumyafastpages&#39; already exists and is not an empty directory. Directory /home/spalak06/csp/sjavaproject exists. . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned bash: cd: /home/spalak06/csp/sjavaproject: No such file or directory /home/spalak06 list top level or root of files with project pulled from github Anaconda3-2022.05-Linux-x86_64.sh anaconda3 csp lib vscode Anaconda3-2022.05-Linux-x86_64.sh.1 bin etc saumyafastpages list again with hidden files pulled from github . .landscape .wget-hsts .. .local Anaconda3-2022.05-Linux-x86_64.sh .bash_history .m2 Anaconda3-2022.05-Linux-x86_64.sh.1 .bash_logout .motd_shown anaconda3 .bashrc .node-gyp bin .cache .npm csp .conda .npmrc etc .config .profile lib .gitconfig .sts4 saumyafastpages .ipython .sudo_as_admin_successful vscode .jupyter .vscode-server list all files in long format total 1349352 drwxr-xr-x 1 spalak06 spalak06 4096 Aug 28 15:37 . drwxr-xr-x 1 root root 4096 Aug 19 04:04 .. -rw- 1 spalak06 spalak06 19997 Aug 28 17:07 .bash_history -rw-r--r-- 1 spalak06 spalak06 220 Aug 19 04:04 .bash_logout -rw-r--r-- 1 spalak06 spalak06 4258 Aug 19 09:42 .bashrc drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 09:03 .cache drwxr-xr-x 1 spalak06 spalak06 4096 Aug 19 09:36 .conda drwxr-xr-x 1 spalak06 spalak06 4096 Aug 23 09:23 .config -rw-r--r-- 1 spalak06 spalak06 49 Aug 19 08:41 .gitconfig drwxr-xr-x 1 spalak06 spalak06 4096 Aug 22 09:32 .ipython drwxr-xr-x 1 spalak06 spalak06 4096 Aug 20 00:49 .jupyter drwxr-xr-x 1 spalak06 spalak06 4096 Aug 19 04:05 .landscape drwxr-xr-x 1 spalak06 spalak06 4096 Aug 22 09:30 .local drwxr-xr-x 1 spalak06 spalak06 4096 Aug 23 08:48 .m2 -rw-r--r-- 1 spalak06 spalak06 0 Aug 28 12:27 .motd_shown drwxr-xr-x 1 spalak06 spalak06 4096 Aug 20 00:52 .node-gyp drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 09:03 .npm -rw- 1 spalak06 spalak06 22 Aug 21 22:05 .npmrc -rw-r--r-- 1 spalak06 spalak06 807 Aug 19 04:04 .profile drwxr-xr-x 1 spalak06 spalak06 4096 Aug 23 08:49 .sts4 -rw-r--r-- 1 spalak06 spalak06 0 Aug 19 09:28 .sudo_as_admin_successful drwxr-xr-x 1 spalak06 spalak06 4096 Aug 19 04:12 .vscode-server -rw-r--r-- 1 spalak06 spalak06 218 Aug 21 22:43 .wget-hsts -rw-r--r-- 1 spalak06 spalak06 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh -rw-r--r-- 1 spalak06 spalak06 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.1 drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 09:23 anaconda3 drwxr-xr-x 1 spalak06 spalak06 4096 Aug 22 08:38 bin drwxr-xr-x 1 spalak06 spalak06 4096 Aug 28 15:37 csp drwxr-xr-x 1 spalak06 spalak06 4096 Aug 21 22:05 etc drwxr-xr-x 1 spalak06 spalak06 4096 Aug 21 22:05 lib drwxr-xr-x 1 spalak06 spalak06 4096 Aug 28 17:57 saumyafastpages drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 08:54 vscode . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts . Look for posts bash: cd: /home/spalak06/csp/sjavaproject/_posts: No such file or directory /home/spalak06 total 1349320 -rw-r--r-- 1 spalak06 spalak06 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh -rw-r--r-- 1 spalak06 spalak06 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.1 drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 09:23 anaconda3 drwxr-xr-x 1 spalak06 spalak06 4096 Aug 22 08:38 bin drwxr-xr-x 1 spalak06 spalak06 4096 Aug 28 15:37 csp drwxr-xr-x 1 spalak06 spalak06 4096 Aug 21 22:05 etc drwxr-xr-x 1 spalak06 spalak06 4096 Aug 21 22:05 lib drwxr-xr-x 1 spalak06 spalak06 4096 Aug 28 17:57 saumyafastpages drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 08:54 vscode . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . Look for notebooks bash: cd: /home/spalak06/csp/sjavaproject/_notebooks: No such file or directory /home/spalak06 total 1349320 -rw-r--r-- 1 spalak06 spalak06 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh -rw-r--r-- 1 spalak06 spalak06 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.1 drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 09:23 anaconda3 drwxr-xr-x 1 spalak06 spalak06 4096 Aug 22 08:38 bin drwxr-xr-x 1 spalak06 spalak06 4096 Aug 28 15:37 csp drwxr-xr-x 1 spalak06 spalak06 4096 Aug 21 22:05 etc drwxr-xr-x 1 spalak06 spalak06 4096 Aug 21 22:05 lib drwxr-xr-x 1 spalak06 spalak06 4096 Aug 28 17:57 saumyafastpages drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 08:54 vscode . echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images # this should exist per fastpages pwd ls -l . Look for images in notebooks, print working directory, list files bash: cd: /home/spalak06/csp/sjavaproject/_notebooks/images: No such file or directory /home/spalak06 total 1349320 -rw-r--r-- 1 spalak06 spalak06 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh -rw-r--r-- 1 spalak06 spalak06 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.1 drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 09:23 anaconda3 drwxr-xr-x 1 spalak06 spalak06 4096 Aug 22 08:38 bin drwxr-xr-x 1 spalak06 spalak06 4096 Aug 28 15:37 csp drwxr-xr-x 1 spalak06 spalak06 4096 Aug 21 22:05 etc drwxr-xr-x 1 spalak06 spalak06 4096 Aug 21 22:05 lib drwxr-xr-x 1 spalak06 spalak06 4096 Aug 28 17:57 saumyafastpages drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 08:54 vscode . look inside markdown files . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown echo &quot;&quot; echo &quot;end of README.md&quot; . Navigate to project, then navigate to area wwhere files were cloned bash: cd: /home/spalak06/csp/sjavaproject: No such file or directory show the contents of README.md cat: README.md: No such file or directory end of README.md . env, git, and github . key / value concepts | . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l # echo &quot;&quot; # echo &quot;look at config file&quot; # cat _config.yml . Show the shell environment variables, key on left of equal value on right SHELL=/bin/bash PYTHONUNBUFFERED=1 project=/home/spalak06/csp/sjavaproject CONDA_EXE=/home/spalak06/anaconda3/bin/conda _CE_M= WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=DESKTOP-2SM2O6U PWD=/home/spalak06 LOGNAME=spalak06 CONDA_PREFIX=/home/spalak06/anaconda3 project_dir=/home/spalak06/csp HOME=/home/spalak06 LANG=C.UTF-8 LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/home/spalak06/csp/sjavaproject/_posts LESSCLOSE=/usr/bin/lesspipe %s %s VSCODE_HANDLES_SIGPIPE=true TERM=xterm-256color _CE_CONDA= LESSOPEN=| /usr/bin/lesspipe %s USER=spalak06 PYTHONIOENCODING=utf-8 notebooks=/home/spalak06/csp/sjavaproject/_notebooks CONDA_SHLVL=1 SHLVL=1 PAGER=cat project_repo=https://github.com/saumyapalk23/saumyafastpages.git VSCODE_CWD=/mnt/c/Users/Saumya/AppData/Local/Programs/Microsoft VS Code CONDA_PYTHON_EXE=/home/spalak06/anaconda3/bin/python PS1=[PEXP [ ]ECT_PROMPT&gt; CONDA_DEFAULT_ENV=base WSLENV=VSCODE_WSL_EXT_LOCATION/up VSCODE_WSL_EXT_LOCATION=/mnt/c/Users/Saumya/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3 XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop PATH=/home/spalak06/.vscode-server/bin/e4503b30fc78200f846c62cf8091b76ff5547662/bin/remote-cli:/home/spalak06/.local/bin:/home/spalak06/bin:/home/spalak06/anaconda3/bin:/home/spalak06/anaconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/mnt/c/Program Files (x86)/Common Files/Intel/Shared Libraries/redist/intel64/compiler:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0:/mnt/c/WINDOWS/System32/OpenSSH:/mnt/c/Program Files (x86)/Intel/Intel(R) Management Engine Components/DAL:/mnt/c/Program Files/Intel/Intel(R) Management Engine Components/DAL:/mnt/c/Program Files/Intel/WiFi/bin:/mnt/c/Program Files/Common Files/Intel/WirelessCommon:/mnt/c/Program Files (x86)/IVI Foundation/VISA/WinNT/Bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/nodejs:/mnt/c/Users/Saumya/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/Saumya/AppData/Roaming/npm:/mnt/c/Users/Saumya/AppData/Local/Programs/Microsoft VS Code/bin:/snap/bin VSCODE_NLS_CONFIG={&#34;locale&#34;:&#34;en&#34;,&#34;availableLanguages&#34;:{}} HOSTTYPE=x86_64 VSCODE_HANDLES_UNCAUGHT_ERRORS=true OLDPWD=/home/spalak06/csp VSCODE_IPC_HOOK_CLI=/tmp/vscode-ipc-d16986ec-0f10-4023-ace5-802f43f4288e.sock _=/usr/bin/env bash: cd: /home/spalak06/csp/sjavaproject: No such file or directory show the secrets of .git bash: cd: .git: No such file or directory total 1349320 -rw-r--r-- 1 spalak06 spalak06 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh -rw-r--r-- 1 spalak06 spalak06 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.1 drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 09:23 anaconda3 drwxr-xr-x 1 spalak06 spalak06 4096 Aug 22 08:38 bin drwxr-xr-x 1 spalak06 spalak06 4096 Aug 28 15:37 csp drwxr-xr-x 1 spalak06 spalak06 4096 Aug 21 22:05 etc drwxr-xr-x 1 spalak06 spalak06 4096 Aug 21 22:05 lib drwxr-xr-x 1 spalak06 spalak06 4096 Aug 28 17:57 saumyafastpages drwxr-xr-x 1 spalak06 spalak06 4096 Aug 25 08:54 vscode .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/jupyter/2022/08/28/bashh.html",
            "relUrl": "/jupyter/2022/08/28/bashh.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "First post",
            "content": "First Post . Hello, here’s my first post! .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/markdown/2022/08/22/first-post.html",
            "relUrl": "/markdown/2022/08/22/first-post.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://saumyapalk23.github.io/saumyafastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hi, I’m Saumya Palakodety, a junior at Del Norte High School!! . .",
          "url": "https://saumyapalk23.github.io/saumyafastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Frontend Hacks",
          "content": "| Menu | Calculator | Snake Game | . Frontend! .",
          "url": "https://saumyapalk23.github.io/saumyafastpages/frontend12/updates",
          "relUrl": "/frontend12/updates",
          "date": ""
      }
      
  

  

  
      ,"page4": {
          "title": "Notes",
          "content": "College Board . Topic College Board Unit Notes Usage . Unit 1 | Primitives Notes | Primitives Code | . Unit 2 | Objects Notes | Objects Usage | . Code.Org Notes . Unit Notes . Unit 1 - Basics of Objects Oriented Programming | Week 1 | . Unit 1 (Cont.) | Week 2 Vocab | PBL Lessons . Topic Notes . Alumni Notes | Alumni Notes | &lt;/table&gt; .",
          "url": "https://saumyapalk23.github.io/saumyafastpages/notesandvocab/",
          "relUrl": "/notesandvocab/",
          "date": ""
      }
      
  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://saumyapalk23.github.io/saumyafastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}